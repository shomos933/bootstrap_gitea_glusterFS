---
# Обновление системы и установка базовых утилит
- name: Создать swap-файл размером 1GB
  become: yes
  shell: |
    fallocate -l 1G /swapfile || dd if=/dev/zero of=/swapfile bs=1M count=1024
    chmod 600 /swapfile
    mkswap /swapfile
    swapon /swapfile
  args:
    creates: /swapfile

- name: Добавить swap в /etc/fstab
  become: yes
  lineinfile:
    path: /etc/fstab
    line: '/swapfile none swap sw 0 0'
    state: present

- name: Обновление пакетов (Debian/Ubuntu)
  apt:
    update_cache: yes
    upgrade: yes
  when: ansible_os_family == "Debian"

- name: Обновление пакетов (RedHat)
  yum:
    name: "*"
    state: latest
  when: ansible_os_family == "RedHat"

- name: Установка необходимых утилит (Debian/Ubuntu)
  apt:
    name:
      - git
      - wget
      - curl
      - rsyslog
      - openssh-server
    state: present
  when: ansible_os_family == "Debian"

- name: Установка необходимых утилит (RedHat)
  yum:
    name:
      - git
      - wget
      - curl
      - rsyslog
      - openssh-server
    state: present
  when: ansible_os_family == "RedHat"

# дополнительно проверяем, что сервис SSH запущен
- name: Ensure SSH service is enabled and started
  service:
    name: ssh
    state: started
    enabled: yes

# Отключение автоматических обновлений и очистка кэша
- name: Отключить автоматические обновления для Debian/Ubuntu
  copy:
    dest: /etc/apt/apt.conf.d/20auto-upgrades
    content: |
      APT::Periodic::Update-Package-Lists "0";
      APT::Periodic::Unattended-Upgrade "0";
  when: ansible_os_family == "Debian"

- name: Очистить кэш пакетов для Debian/Ubuntu
  apt:
    autoclean: yes
  when: ansible_os_family == "Debian"

- name: Отключить автоматические обновления для RedHat
  copy:
    dest: /etc/dnf/automatic.conf
    content: |
      [commands]
      apply_updates = no
  when: ansible_os_family == "RedHat"

- name: Очистить кэш пакетов для RedHat
  command: dnf clean all
  when: ansible_os_family == "RedHat"

# Отключение спящих режимов
- name: Отключить sleep, suspend, hibernate
  command: systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target



# Копирование скрипта настройки логов (логи будут сохраняться в корне проекта)
- name: Копировать скрипт настройки логов
  copy:
    src: files/setup_log_management.sh
    dest: /usr/local/bin/setup_log_management.sh
    mode: '0755'

# Запуск скрипта настройки логов
- name: Запустить скрипт настройки логов
  command: /usr/local/bin/setup_log_management.sh
  register: log_script_result
  changed_when: false

# Обновление known_hosts для всех узлов с использованием ssh-keyscan
- name: Обновить known_hosts для узлов
  known_hosts:
    path: /home/shom/.ssh/known_hosts
    name: "{{ item }}"
    key: "{{ lookup('pipe', 'ssh-keyscan -H ' ~ item) }}"
  loop: "{{ groups['gitea_nodes'] }}"
  delegate_to: localhost

